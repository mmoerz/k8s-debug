name: Build, Tag, Sign, and Verify Debug Barman Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Runs when pushing tags like v1.0.0

permissions:
  contents: read
  packages: write
  id-token: write # required for cosign keyless signing

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/debug-barman

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine version and tags
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            LATEST=false
          elif [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            VERSION="latest"
            LATEST=true
          else
            VERSION="dev-${GITHUB_SHA::7}"
            LATEST=false
          fi

          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "LATEST=${LATEST}" >> $GITHUB_ENV

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./debug-barman/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.LATEST && format('{0}:latest', env.IMAGE_NAME) || '' }}
            ${{ startsWith(github.ref, 'refs/tags/v') && format('{0}:{1}', env.IMAGE_NAME, github.ref_name) || '' }}

      # Install Syft for SBOM
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.6.0
        with:
          cosign-release: 'v2.2.3'

      # Get image digest for immutable reference
      - name: Get image digest
        id: digest
        run: |
          RAW=$(docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ github.sha }} --format '{{json .}}')
          echo "$RAW"
          # Try multi-arch first, fall back to single-arch
          DIGEST=$(echo "$RAW" | jq -r '
            if .manifest and .manifest.manifests then
              .manifest.manifests[]
              | select(.platform.architecture=="amd64" and .platform.os=="linux")
              | .digest
            elif .digest then
              .digest
            else
              empty
            end
          ')
      
          if [ -z "$DIGEST" ]; then
            echo "❌ Failed to extract digest from:"
            echo "$RAW"
            exit 1
          fi
      
          echo "Image digest: $DIGEST"
          echo "digest=$DIGEST" >> $GITHUB_ENV

      # Generate SBOM for digest and attest
      - name: Generate and attest SBOM for digest
        run: |
          syft ${{ env.IMAGE_NAME }}@${{ env.digest }} -o spdx-json > sbom.json
          cosign attest --yes \
            --predicate sbom.json \
            --type spdx \
            ${{ env.IMAGE_NAME }}@${{ env.digest }}

      # Optionally attest SBOM for tags (latest/version)
      - name: Generate and attest SBOM for tag
        run: |
          TAG_REF="${IMAGE_NAME}:${VERSION}"
          syft $TAG_REF -o spdx-json > sbom-tag.json
          cosign attest --yes \
            --predicate sbom-tag.json \
            --type spdx \
            $TAG_REF

      # Sign image digest
      - name: Sign image
        run: |
          cosign sign --yes ${{ env.IMAGE_NAME }}@${{ env.digest }}

      # Verify image signature
      - name: Verify image signature
        run: |
          cosign verify ${{ env.IMAGE_NAME }}@${{ env.digest }} \
            --certificate-identity-regexp "https://github.com/${{ github.repository }}" \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com

